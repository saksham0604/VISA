(function ( $ ) {
  $.fn.heromarquee = function( options ) {
    var settings = $.extend({}, options );

    let windowWidth = $(window).width();
  
    return this.each(function() {
      let
      hero = $(this),
      video = hero.find('.heroVideo'),
      content = hero.find('.vs-hero-marquee-content'),
      playBtn = hero.find('.vs-hero-play-btn'),
      pauseBtn = hero.find('.vs-hero-pause-btn'),
      modalCta = hero.find('.vs-btn-video, .vs-btn-modal'),
      animateOnLoad = hero.closest('.marquee-container').data('animation'),
      modalCloseBtn = $('#modal_close_btn'),
      modalEl = modalCloseBtn.closest('.vs-generic-modal'),
      playVideoOnModalClose = false,
      setDisplayNone = 'vs-d-none',
      setDisplayBlock = 'vs-d-block';

      init();

      playBtn.on('click', onclick_play);
      pauseBtn.on('click', onclick_pause);
        
      if (video.length > 0) {
        function pauseVideoOnCtaClick() {
          playVideoOnModalClose = playVideoOnModalClose || !video.get(0).paused;
          onclick_pause();
        }
        function playVideoAfterCtaClick() {
          if (playVideoOnModalClose) {
            onclick_play();
            playVideoOnModalClose = false;
          }
        }
        // pause the video if the modal is opened
        modalCta.on('click', () => {
          pauseVideoOnCtaClick();
        });
        // resume the video if the modal is closed
        modalCloseBtn.on('click', playVideoAfterCtaClick);
        modalEl.on('keydown', (e) => {
          if (e.code === 'Escape') {
            playVideoAfterCtaClick();
          }
        });
      }

      function init() {
        if (animateOnLoad) {
            slideAnimation(content);
        }

        if(isInViewport(hero)) {
          slideAnimation(content);
        }
      }

      function showPauseBtn() {
        playBtn.addClass(setDisplayNone);
        playBtn.removeClass(setDisplayBlock);
        pauseBtn.addClass(setDisplayBlock);
        pauseBtn.removeClass(setDisplayNone);
      }

      function showPlayButton() { 
        playBtn.addClass(setDisplayBlock);
        playBtn.removeClass(setDisplayNone);
        pauseBtn.addClass(setDisplayNone);
        pauseBtn.removeClass(setDisplayBlock);
      }

      function playVideo() {
        video.get(0).play();
      }

      function pauseVideo() {
        video.get(0).pause();
      }

      function onclick_play() {
        playVideo();
        showPauseBtn()
        
      }

      function onclick_pause() {
        pauseVideo();
        showPlayButton()
      }

      function slideAnimation(currentSlide) {
        if (!currentSlide.hasClass("vs-active")) {

          var slide = currentSlide.find('.vs-slide');
      
          slide.each(function (i) {
              var animation = $(this);
              setTimeout(function () {
              animation.addClass('vs-active');
              }, 750 * i);
          });

          //checking for window width and not loading video if its not greater than 600
          if ( windowWidth > 600 && video.length > 0 ) {
            showPauseBtn()
            setTimeout(function() {
                video.addClass("vs-fade-in vs-active");
            },1000);
          }
        } 
      }

    });
  };
}( jQuery ));

$(window).on('load scroll resize',function() {
  $('.vs-hero-marquee').heromarquee();
});